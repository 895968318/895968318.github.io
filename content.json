[{"title":"JavaWeb","date":"2020-01-22T05:59:08.047Z","path":"2020/01/22/JavaWeb/","text":"JavaWeb遇到的问题 问题: 更新了css资源网页不能展示相对于的格式 可能的解决方法：清除网页的缓存 问题：ajax不能正确的执行回调函数 可能的解决方法：检查对应的按钮是否是在表单里并且使用了type=”submit” 可学习的方法xxx.properties配置文件可以放在一个叫resource的目录中，把这个目录标志为resources根这样就可以使用 xxx.class.getClassLoader().getResourceAsStream(“xxx”)获得相对于的配置文件的字节输入流 在使用Properties类的load()方法就可以加载相对于的配置信息了","tags":[]},{"title":"Ajax Json Redis","date":"2020-01-22T05:59:08.045Z","path":"2020/01/22/Ajax Json Redis/","text":"Ajax原生的实现方式（了解） jQuery实现方法 $.ajax() ​ $.ajax(url,[settings])//$.ajax({键值对}) $.get() ​ $.get(url,[data],[callback],[type]) ​ url:请求路径 ​ data:请求参数 ​ callback:回调函数 type:响应结果的类型​ $.post() ​ 和$.get()方法类似 JSON基本语法1.基本规则： ​ 数据在名称/值队中：json数据是由键值对构成的 ​ *建用引号(单双都行)引起来，也可以不用引号 ​ *值的类型：数字，字符串（在双引号中），逻辑值（true或false）， ​ 数组{“person” : [{},{}]}, ​ 对象{“address”:{“provice”:”陕西”…}} ​ 数据由逗号隔开：多个键值对由逗号分隔 ​ 花括号保存对象：使用{}定义json格式 ​ 方括号保存数组：[] 获取数据 1.json对象.键名 2.json对象[“键名”] (伪数组形式) 3.数组对象[索引] 遍历 12345678var person = &#123;\"name\" : \"张三\", \"age\" :23, \"gender\":true&#125;for in循环for(var key in person)&#123; //key为键的字符串 alert(key+\": \"+person[key])&#125; Jackson*JSON解析器 ​ jackson JSON转Java对象​ 1.导入jackson相关jar包 ​ 2.创建jackson核心对象ObjectMapper ​ 3.调用ObjectMapper的相关方法进行转换 ​ readValue(String,class) Java对象转JSON​ 1使用步骤 ​ 1.导入jackson相关jar包 ​ 2.创建jackson核心对象ObjectMapper ​ 3.调用ObjectMapper的相关方法进行转换 ​ 1.方法 ​ writeValue(参数1，obj) ​ 参数1：​ file：将obj对象转换为json字符串，并保存到指定文件中 ​ writer：将obj对象转换为json字符串，并保存到字符输出流中 ​ outputStream：将obj对象转换为json字符串，并保存到字节输出流中 ​ writeValueAsString(obj) 将对象转为json字符串 ​ 2.相关注解 ​ @JsonIgnore:忽略属性 ​ @JsonFormat:属性格式化 ​ 3.复杂java对象转换 ​ 1.List:数组 ​ 2.Map:对象格式一致(键值对) redis1.redis的数据结构​ *redis存储的是：key，value格式的数据，其中key都是字符串，value有5种不同的数据结构 ​ 字符串：string ​ 哈希类型 hash：map格式 ​ 列表类型：linkedlist格式 ​ 集合类型：set ​ 有序集合类型 sortedset ​ 字符串类型： ​ 1.存储：set key value ​ 2.获取：get key ​ 3.删除：del key ​ 哈希类型 ​ 1.存储：hset key field value ​ 2.获取：hget key field （获取全部：hgetall key 获取所有的field和value） ​ 3.删除：hdel key field ​ 列表类型list： ​ 1.存储： ​ 1.lpush key value ： 将元素加入列表的左边 ​ 2.rpush key value ： 将元素加入列表的右边 ​ 2.获取： ​ lrange key start end ： 范围获取 ​ 3 删除： ​ lpop key： 删除列表最左边的元素，并返回 ​ rpop key： 删除列表最右左边的元素，并返回 ​ 集合类型set ​ 1.存储：sadd key value ​ 2.获取：smembers key：获取set集合所有元素 ​ 3.删除：srem key value ：删除set集合中的某个元素 ​ 有序集合 ​ 1.存储：zadd key score value ： ​ 2.获取：zrange key start end ​ 3.删除：zrem key value ​ 通用命令 ​ 1.keys *： 查询所有的键 ​ 2.type key：获取键对应的value的类型 ​ 3.del key：删除指定的key value ​ 持久化 ​ redis持久化机制: ​ 1.RDB:默认方式，不需要进行配置，默认使用这种方式 ​ 在一定的间隔时间中，检测key的变化变化情况，然后持久化数据 ​ 1.编辑redis.windows.conf文件 ​ 2.重新启动redis服务器，并指定配置文件名 ​ ​ 2.AOF：日志记录的方式，可以记录每一条命令的操作。可以每一次命令操作后，持久化数据 ​ 编辑redis.windows.conf文件 ​ appendonly no（关闭AOF）–&gt; appendonly yes (开启AOF) jedis的使用123456//获取连接 Jedis jedis = new Jedis( \"localhost\",6379 ); //操作 jedis.set(\"username\",\"zhangsan\"); //关闭连接 jedis.close(); ​ jedis操作各种数据结构 ​ jedis的方法和redis的命令相同 ​ setex jedis连接池：​ (创建配置对象JedisPoolConfig) ​ 1.创建jedis连接池对象JedisPool ​ 2.获取连接( JedisPool.getResource() ) ​ 3.使用 ​ 4.关闭，归还到连接池中","tags":[]},{"title":"前端学习","date":"2020-01-22T03:39:20.234Z","path":"2020/01/22/前端学习/","text":"HTML和CSShtml推荐使用双引号 js推荐使用单引号 单行文字垂直居中文字的行高等于盒子的高度。 设置了内边距盒子也会被撑大 盒子的实际的大小 = 内容的宽度和高度 + 内边距 + 边框 如果没有给一个盒子指定宽度， 此时，如果给这个盒子指定padding， 则不会撑开盒子。 浮动和绝对定位都会托标 子绝父相是一个定位较好的使用方式 相邻块元素垂直外边距的合并（去两个之间最大值而不是相加） Javascriptjs变量名使用驼峰命名法 js尽量不要用name作为变量名，用的浏览器有特殊含义 数值型前面加0表示八进制，0x表示10进制 字符串拼接 引引加加 浮点数不要直接比较 字符串参加数值相关的的运算会转化为数值型(除了加号) []是js中数组字面量 {}是js中对象的字面量","tags":[]},{"title":"Hello World","date":"2020-01-22T03:18:40.512Z","path":"2020/01/22/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]